name: CD

on:
  release:
    types: [ created ]

defaults:
  run:
    shell: bash

# required for upload
permissions:
  contents: write

jobs:

  Linux:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        runner: [ ubuntu-24.04, ubuntu-24.04-arm ]
    steps:
      - uses: actions/checkout@v4

      - name: Maven cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-${{ runner.arch }}-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Package jar
        run: mvn package

      - name: jpackage app-image
        run: |
          make dist

#      - name: Download and install AppImageTool
#        run: |
#          curl -LO "https://github.com/AppImage/appimagetool/releases/download/continuous/appimagetool-${{ runner.arch }}.AppImage"
#          chmod +x "appimagetool-${{ runner.arch }}.AppImage"
#          sudo mv "appimagetool-${{ runner.arch }}.AppImage" /usr/local/bin/appimagetool

#      - name: AppImage
#        run: |
#          appimagetool dist/jmugen*
#          mv dist/*.AppImage jmugen-${{ env.GITHUB_REF_NAME }}.AppImage

      - name: Prepare release
        run: |
          pwd
          
          # data
          zip -9 -r data.zip data

          # jar
          cp JMugen.Debug/target/JMugen.Debug-0.0.1-SNAPSHOT.jar jmugen-${GITHUB_REF_NAME}.jar 

          ls -lha

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            data.zip
            jmugen-*.jar
            jmugen-*.tar.gz

  macOS:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        runner: [ macos-latest, macos-13 ]
    steps:
      - uses: actions/checkout@v4

      - name: Maven cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-${{ runner.arch }}-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Package jar
        run: mvn package

      - name: jpackage app-image
        run: |
          make dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            jmugen-*.tar.gz


  Windows:
    runs-on: ${{ matrix.runner }}
    strategy:
      matrix:
        runner: [ windows-latest ]
    defaults:
      run:
        shell: cmd
    steps:
      - uses: actions/checkout@v4

      - name: Maven cache
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ runner.arch }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-${{ runner.arch }}-

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '17'

      - name: Package jar
        run: mvn package

      - name: jpackage app-image
        run: |
          jpackage --version
          
          mkdir tmp
          copy JMugen.Debug\target\JMugen.Debug-0.0.1-SNAPSHOT.jar tmp\jmugen.jar
          
          jpackage --input tmp ^
          --name jmugen-%GITHUB_REF_NAME% ^
          --main-jar jmugen.jar ^
          --type app-image ^
          --java-options "--add-opens java.desktop/sun.awt=ALL-UNNAMED" ^
          --dest dist/
          
          rmdir /s /q tmp

      - name: Prepare release
        run: |
          powershell Copy-Item -Path release/win/* -Destination dist/ -Recurse
          powershell Compress-Archive -Path "dist/*" -DestinationPath "jmugen-%GITHUB_REF_NAME%-${{ runner.os }}-${{ runner.arch }}.zip"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            jmugen-*.zip
